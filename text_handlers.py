from aiogram import types, Bot
import random
import config
import DataBaseUtils
import os

media_file_path = str(os.path.join(os.path.dirname(os.path.realpath(__file__)), 'media')) + '\\'

db = DataBaseUtils.DbConnection('OrderBot.db')

async def print_ahah(bot : Bot, message : types.Message):
    await message.answer_sticker(config.FUNY_STICKERS[random.randint(0, len(config.FUNY_STICKERS) - 1)]) 

async def print_pizd(bot : Bot, message : types.Message):
    await message.answer_sticker(config.SHOCK_STICKERS[random.randint(0, len(config.SHOCK_STICKERS) - 1)])

async def print_good(bot : Bot, message : types.Message):
    await message.answer_sticker(config.GOODMAN_STICKERS[random.randint(0, len(config.GOODMAN_STICKERS) - 1)])

async def print_sleep(bot : Bot, message : types.Message):
    await message.answer_sticker(config.SLEEP_STICKERS[random.randint(0, len(config.SLEEP_STICKERS) - 1)])

async def print_plus(bot : Bot, message : types.Message):
    if message.text == '+':
        await message.answer('+')

async def print_minus(bot : Bot, message : types.Message):
    if message.text == '-':
        await message.answer('-')

async def print_go_eat(bot : Bot, message : types.Message):
    if message.text.lower().find('–∫—É—à–∞—Ç—å') != -1 and message.text.lower().find('–ø–æ–µ–¥–µ–º') != -1:
        ver = random.randint(0, 100)
        if 0 <= ver < 22:
            await message.answer('–ï–¥–µ–º –≤ –∞–π–º–æ–ª–ª')
        elif 22 <= ver < 44:
            await message.answer('–ï–¥–µ–º –≤ –ø–ª–∞–Ω–µ—Ç—É')
        elif 44 <= ver < 66:
            await message.answer('–ò–¥—ë–º –≤ —à–∞–≤—É')
        elif 66 <= ver < 88:
            await message.answer('–ò–¥—ë–º –≤ —Å—Ç–æ–ª–æ–≤–∫—É')
        elif 88 <= ver < 90:
            await message.answer('–ï–¥–∏–º —Ä–∞–∫–æ–≤')
        elif 90 <= ver < 92:
            await message.answer('–ï–¥–∏–º —Ä–æ–ª–ª—ã')
        elif 92 <= ver < 94:
            await message.answer('–ï–¥–∏–º —Å–º—É–∑–∏')
        elif 94 <= ver < 96:
            await message.answer('–ù–µ –µ–¥–∏–º —Å–µ–≥–æ–¥–Ω—è')
        elif 96 <= ver < 98:
            await message.answer('–ï–¥–∏–º –ø–∏—Ü—Ü–∞–º–µ–Ω')
        else:
            await message.answer('–®–∞—à–ª—ã–∫–æ—Ñ—Ñ')

async def print_repare(bot : Bot, message : types.Message):
    file = types.InputFile(media_file_path + 'fix.jpg')
    await bot.send_photo(
        message.chat.id,
        file,
        caption='–©–∞ –ø–æ—á–∏–Ω–∏–º'
    )

async def print_search(bot : Bot, message : types.Message):
    if message.text.lower().find('–≥–¥–µ') != -1 and message.text.lower().find('?') != -1:
        file = types.InputFile(media_file_path + 'search.jpg')
        login = db.get_user_login(message.from_user.id)
        await bot.send_photo(
            message.chat.id,
            file,
            caption=f'–î–∞–≤–∞–π—Ç–µ –ø–æ–º–æ–∂–µ–º @{login} –Ω–∞–π—Ç–∏ —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ'
        )

async def print_replay(bot : Bot, message : types.Message):
    file = types.InputFile(media_file_path + 'replay.jpg')
    login = db.get_user_login(message.from_user.id)
    await bot.send_photo(
        message.chat.id,
        file,
        caption=f'@{login} –∫—Ä–∞—Å–∞–≤–∞'
    )

async def print_bubu(bot: Bot, message : types.Message):
    await message.answer_sticker(config.BUBU_STICKERS[random.randint(0, len(config.BUBU_STICKERS) - 1)])

async def print_fingers(bot: Bot, message : types.Message):
    file = types.InputFile(media_file_path + 'fingers.jpg')
    await bot.send_photo(
        message.chat.id,
        file
    )

async def print_pidr(bot: Bot, message : types.Message):
    file = types.InputFile(media_file_path + 'pidor.jpg')
    await bot.send_photo(
        message.chat.id,
        file
    )

async def print_fura(bot: Bot, message : types.Message):
    await bot.send_voice(
        message.chat.id,
        voice=types.InputFile(media_file_path + 'easter.mp3')
    )

async def print_sad(bot: Bot, message : types.Message):
    await message.answer_sticker(config.CRY_STICKERS[random.randint(0, len(config.CRY_STICKERS) - 1)])

async def print_pohui(bot: Bot, message : types.Message):
    await message.answer_sticker(config.POHUI_STICKERS[random.randint(0, len(config.POHUI_STICKERS) - 1)])

async def print_virus(bot: Bot, message : types.Message):
    if random.randint(0, 1) == 1:
        file = types.InputFile(media_file_path + 'avast.mp3')
    else:
        file = types.InputFile(media_file_path + 'kasper.mp3')
    await bot.send_voice(
        message.chat.id,
        voice=file
    )

async def print_sprav(bot: Bot, message : types.Message):
    await message.answer_sticker('CAACAgIAAxkBAAEGSxtjY0JDVWilZ_UZndYPkDo2SNiyTgACVAADuRtZC2dCUqTSakgJKgQ')

async def print_misha_zaeb(bot: Bot, message : types.Message):
    await message.answer_sticker('CAACAgIAAxkBAAEGSx1jY0LJbBYBHWeKjzukEemjCNxViAACWgADuRtZC1fMhgYQTAjPKgQ')
    await message.answer_sticker('CAACAgIAAxkBAAEGSx9jY0LLH0u2SEqZnzGYbA3qZPNpVgACdQADuRtZCwrzLOB1qOVZKgQ')
    await message.answer_sticker('CAACAgIAAxkBAAEGSx9jY0LLH0u2SEqZnzGYbA3qZPNpVgACdQADuRtZCwrzLOB1qOVZKgQ')
    await message.answer_sticker('CAACAgIAAxkBAAEGSyFjY0LNUmrLHxVU5bHow9Ebkms54wACWwADuRtZC8HaaJQtmnPkKgQ')

text_messages = {
    '–∞—Ö–∞—Ö' : print_ahah,
    '–ø–∏–∑–¥–µ—Ü' : print_pizd,
    '—Ö–æ—Ä–æ—à' : print_good,
    '—Å–ø–∞—Ç—å' : print_sleep,
    '+' : print_plus,
    '-' : print_minus,
    '–ø–æ–µ–¥–µ–º' : print_go_eat,
    '–∫—É—à–∞—Ç—å' : print_go_eat,
    '–ø—Ä–∞–≤—å' : print_repare,
    '–ø—Ä–∞–≤–∏—Ç' : print_repare,
    '–ø—Ä–∞–≤—Ç–µ' : print_repare,
    '–ø—Ä–∞–≤–∏—à—å' : print_repare,
    '—á–∏–Ω–∏' : print_repare,
    '–≥–¥–µ' : print_search,
    '?' : print_search,
    '–ø–µ—Ä–µ–∏–≥—Ä–∞–ª' : print_replay,
    '–±—É–±—É' : print_bubu,
    'üëâüëà' : print_fingers,
    '–ø–∏–¥–æ—Ä' : print_pidr,
    '–ø–∏–¥–∞—Ä' : print_pidr,
    '—à–æ–∫' : print_fura,
    '((' : print_sad,
    '–≥—Ä—É—Å—Ç—å' : print_sad,
    '–ø–ª–∞–∫' : print_sad,
    '–ø–æ—Ö—É–π' : print_pohui,
    '–ø–æ–µ–±–∞—Ç—å' : print_pohui,
    '–ø–ª–µ–≤–∞—Ç—å' : print_pohui,
    '–±–µ–∑ —Ä–∞–∑–Ω–∏—Ü—ã' : print_pohui,
    '–±–æ–ª–µ–ª' : print_virus,
    '–±–æ–ª–µ—é' : print_virus,
    '—Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ' : print_sprav,
    '–º–∏—à–∞ –∑–∞–µ–±–∞–ª' : print_misha_zaeb,
}